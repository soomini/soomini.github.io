{"version":3,"sources":["logo.svg","data.js","쿠션.jpg","살균무선충전기.jpg","버즈라이브케이스.jpg","노트북파우치.jpg","인형.jpg","폰케이스.jpg","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","jpg","title","content","price","제목","styled","div","h4","props","colors","Info","stock","Detail","useEffect","axios","get","timer","setTimeout","alert변경","clearTimeout","useState","alert","inputData","inputData변경","useParams","findProduct","product","find","x","history","useHistory","className","onChange","e","target","value","src","width","onClick","stock변경","push","Card","Card2","Col","xs","md","Image","App","Data","product변경","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","map","a","i","then","result","console","log","data","catch","Row","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09bfc588.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// var name = 'Kim';\r\n// export default name\r\nimport 쿠션 from './쿠션.jpg';\r\nimport 살균무선충전기 from './살균무선충전기.jpg';\r\nimport 버즈라이브케이스 from './버즈라이브케이스.jpg';\r\nimport 노트북파우치 from './노트북파우치.jpg';\r\nimport 인형 from './인형.jpg';\r\nimport 폰케이스 from './폰케이스.jpg';\r\n\r\nexport default [\r\n    {\r\n        id : 0,\r\n        jpg : 쿠션,\r\n        title : \"죠르디 페이스말랑쿠션\",\r\n        content : \"말랑말랑\",\r\n        price : \"36,000원\"\r\n    },\r\n  \r\n    {\r\n        id : 1,\r\n        jpg : 살균무선충전기,\r\n        title : \"죠르디 살균 무선충전기\",\r\n        content : \"살균\",\r\n        price : \"39,000원\"\r\n    },\r\n  \r\n    {\r\n        id : 2,\r\n        jpg : 버즈라이브케이스,\r\n        title : \"죠르디 입체 버즈라이브 케이스\",\r\n        content : \"버즈라이브\",\r\n        price : \"17,000원\"\r\n    },\r\n\r\n    {\r\n        id : 3,\r\n        jpg : 노트북파우치,\r\n        title : \"그린노트북파우치(13인치)\",\r\n        content : \"파우치\",\r\n        price : \"38,000원\"\r\n    },\r\n\r\n    {\r\n        id : 4,\r\n        jpg : 인형,\r\n        title : \"러브메신저인형_죠르디\",\r\n        content : \"Born in Seoul\",\r\n        price : \"16,000원\"\r\n    },\r\n\r\n    {\r\n        id : 5,\r\n        jpg : 폰케이스,\r\n        title : \"그립폰케이스_죠르디\",\r\n        content : \"Born in the States\",\r\n        price : \"36,000원\"\r\n    }\r\n  ] ","export default __webpack_public_path__ + \"static/media/쿠션.89f66f1c.jpg\";","export default __webpack_public_path__ + \"static/media/살균무선충전기.1bd56ae7.jpg\";","export default __webpack_public_path__ + \"static/media/버즈라이브케이스.8ac2062a.jpg\";","export default __webpack_public_path__ + \"static/media/노트북파우치.87681236.jpg\";","export default __webpack_public_path__ + \"static/media/인형.e23a42ce.jpg\";","export default __webpack_public_path__ + \"static/media/폰케이스.07b221c0.jpg\";","// class Detail2 extends React.Component{\r\n//     componentDidMount(){\r\n//         //Detail2 컴포넌트가 Mount 되었을 때 실행할 코드\r\n\r\n//     }\r\n\r\n//     componentWillUnmount(){\r\n//         //Detail2 컴포넌트가 Unmount 되었을 때 실행할 코드\r\n\r\n//     }\r\n// }\r\n\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\n\r\nlet box = styled.div`\r\n    padding-top : 30px;\r\n`; // 팩틴\r\nlet 제목 = styled.h4`\r\n    font-size : 25px;\r\n    color : ${props => props.colors}\r\n`;\r\n\r\nfunction Detail(props) {\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get()\r\n\r\n        let timer = setTimeout(() => { // X초 후에 코드를 실행하고 싶을 때\r\n            alert변경(false)\r\n        }, 2000) //2초 후\r\n\r\n        // return () => {} //사라질 때 실행할 것들\r\n        return () => {clearTimeout(timer)} // 타이머 해제\r\n    },[]); //[]안의 state가 변경이 될 때만 실행해주세요의 뜻. 조건 빈칸이면 Detail 업데이트 시 실행이 안됨\r\n\r\n    let [alert, alert변경] = useState(true);\r\n    let [inputData, inputData변경] = useState('');\r\n    let { id } = useParams(); //훅. {사용자가 입력한 URL파라미터들}\r\n    // let findProduct = props.product.find(function(data){\r\n    //     return data.id == id\r\n    //   });\r\n    let findProduct = props.product.find(x => x.id == id);\r\n\r\n    let history = useHistory();\r\n    return (\r\n        <div className=\"container\">\r\n            <box>\r\n                {/* <제목 colors=\"gray\">Detail</제목> */}\r\n                <제목 className=\"red\">Detail</제목>\r\n            </box>\r\n\r\n            {inputData}\r\n            <input onChange={(e) => { inputData변경(e.target.value) }}></input>\r\n\r\n            {\r\n                alert === true\r\n                    ? (<div className=\"my-alert-red\">\r\n                        <p>재고가 얼마 남지 않았습니다.</p>\r\n                    </div>)\r\n                    : null\r\n            }\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <img src={findProduct.jpg} width=\"100%\" />\r\n                </div>\r\n                \r\n                <div className=\"col-md-6 mt-4\">\r\n                    <h4 className=\"pt-5\">{findProduct.title}</h4>\r\n                    <p>{findProduct.content}</p>\r\n                    <p>{findProduct.price}</p>\r\n                    \r\n                    {/* <p>재고 : ???</p> */}\r\n                    <Info stock={props.stock}></Info>\r\n\r\n                    <button className=\"btn btn-danger\" onClick={() => { props.stock변경([9,11,12])}}>주문하기</button>\r\n                    <button className=\"btn btn-danger\" onClick={() => {\r\n                        history.push('/')\r\n                        // history.goBack(); // 뒤로가기\r\n                    }}>뒤로가기</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Info(props)\r\n{\r\n    return (\r\n        <p>재고 : {props.stock[0]}</p>\r\n    )\r\n}\r\nexport default Detail;","/* eslint-disable */\n\nimport React, { useState } from 'react'\nimport logo from './logo.svg';\nimport Button from 'react-bootstrap/Button';\nimport { Navbar, Container, Nav, NavDropdown, Jumbotron, Row, Col, Image } from 'react-bootstrap';\nimport './App.css';\n// import name from './data.js';\nimport Data from './data.js';\nimport Detail from './Detail.js';\nimport axios from 'axios';\n\nimport { Link, Route, Switch } from 'react-router-dom';\nfunction App() {\n\n  let [product, product변경] = useState(Data);\n  let [stock, stock변경] = useState([10,11,12]);\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\" >JORDY FRIEND SHOP</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              {/* <Nav.Link href=\"#home\">캐릭터</Nav.Link>\n              <Nav.Link href=\"#link\">상품</Nav.Link> */}\n              {/* <Nav.Link> <Link to=\"/\">캐릭터</Link> </Nav.Link>\n              <Nav.Link > <Link to=\"/detail\">상품</Link> </Nav.Link> */}\n              <Nav.Link as={Link} to=\"/\">캐릭터</Nav.Link>\n              <Nav.Link as={Link} to=\"/detail\">상품</Nav.Link>\n              <NavDropdown title=\"구매하기\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n\n      <Switch> {/* 중복매칭을 허용하지 않겠다! */}\n        <Route exact path=\"/\">\n          {/* <div>메인페이지</div> */}\n          <Jumbotron className=\"background\">\n            <div className=\"test\">\n              {/* <h1>10% Season off</h1> */}\n              <h1>귀여운 죠르디를 만나보세요</h1>\n              <p>\n                죠르디 죠르디\n              </p>\n              <p>\n                <Button variant=\"primary\">구매하기</Button>{' '}\n              </p>\n            </div>\n          </Jumbotron>\n          <div className=\"container\">\n            <div className=\"row\">\n              {\n                // product.map((a, i) => {\n                //   return <Card product={product[i]} key={product.id} />\n                // })\n                product.map((a, i) => {\n                  return <Card product={product[i]} i={i} key={i} />\n                })\n              }\n              {/* {\n              product.map(function(a, i){\n                return <Card product={product[i]} key={i}/>\n              })\n            } */}\n\n              <button className=\"btn btn-primary\" onClick={() => {\n\n                //로딩중 UI 띄움\n\n                //axios.post('서버URL', { id: '', pw: 1234 });\n\n                // fetch('https://codingapple1.github.io/shop/data2.json').then() // 호환성이 안 좋음. JSON 그대로 가져옴\n                axios.get('https://codingapple1.github.io/shop/data2.json') // axios를 쓰면 JSON -> Object로 알아서 바꿔줌\n                  .then((result) => {\n                    //로딩중 UI 안 보이게 처리\n\n                    console.log(result.data)\n\n                    product변경([...product, ...result.data]);\n                  })\n                  .catch(() => {\n                    //로딩중 UI 실패\n\n\n                    console.log('실패했어요')\n                  })\n\n              }}>더보기</button>\n            </div>\n          </div>\n\n          <Container>\n            <Row>\n              {/* <Col xs={6} md={4}>\n              <Image src=\"./노트북파우치.jpg\" width=\"100%\"/>\n              <h4>그린노트북파우치(13인치)</h4>\n              <p>38,000원</p>\n            </Col>\n            <Col xs={6} md={4}>\n              <Image src=\"./인형.jpg\" width=\"100%\"/>\n              <h4>러브메신저인형_죠르디</h4>\n              <p>16,000원</p>\n            </Col>\n            <Col xs={6} md={4}>\n              <Image src=\"./폰케이스.jpg\" width=\"100%\"/>\n              <h4>그립폰케이스_죠르디</h4>\n              <p>36,000원</p>\n            </Col> */}\n              {\n                product.map(function (a, i) {\n                  return <Card2 product={product[i]} i={i} key={i} />\n                })\n              }\n            </Row>\n          </Container>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          {/* <div>디테일페이지</div> */}\n          <Detail product={product} stock={stock} stock변경={stock변경}/>\n        </Route>\n\n        <Route path=\"/:id\">  {/*/ 모든문자라는의미. 콜론 뒤에 맘대로 작명. 여러개 사용 가능 /detail/:id/:id2*/}\n\n        </Route>\n\n        {/* <Route path=\"/어쩌구\" component={Modal}>\n      </Route> */}\n      </Switch>\n\n    </div>\n  );\n}\n\nfunction Card(props) {\n  return (\n    <div className=\"col-md-4\">\n      {/* <img src={ './' + props.product.jpg + '.jpg' } width=\"100%\"/> */}\n      <img src={props.product.jpg} width=\"100%\" />\n      <h4>{props.product.title}</h4>\n      <p>{props.product.price}</p>\n    </div>\n  )\n}\n\nfunction Card2(props) {\n  return (\n    <Col xs={6} md={4}>\n      {/* <Image src={ './' + props.product.jpg + '.jpg' } width=\"100%\"/> */}\n      <Image src={props.product.jpg} width=\"100%\" />\n      <h4>{props.product.title}</h4>\n      <p>{props.product.price}</p>\n    </Col>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom'; // 경로 이름 없이 쓸 경우 라이브러리 이름\nimport { HashRouter } from 'react-router-dom'; // 사이트 즈소 뒤에 #이 붙는데 #뒤에 적는 것은 서버로 전달X. 라우팅 안전하게 할 수 있게 도와줌\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}